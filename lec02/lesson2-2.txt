木構造を使えば O(log N)、ハッシュテーブルを使えばほぼ O(1) で検索・追加・削除を実現することができて、
これだけ見ればハッシュテーブルのほうが優れているように見える。
ところが現実の大規模なデータベースでは、ハッシュテーブルではなく木構造が使われることが多い。
その理由を考えよ。
いくつか重要な理由があるので思いつくだけ書いてください！


再ハッシュ(resize()の部分)の手間を省くことができるため。
木構造は順序情報を持つため、昇順にソートしたりなど扱いやすい。
ハッシュテーブルの最悪の計算量はO(N)だが、木構造であるバランス木ならば常にO(log(N))になり、安定しているため。